:where(details) {
  --_bg-color: transparent;
  --_box-shadow: var(--shadow-2);
  --_margin-inline: var(--size-1);

  background-color: var(--_bg-color);
  border-radius: var(--border-radius);
  margin-inline: var(--_margin-inline);
  padding-block: var(--size-2);

  summary {
    background-color: inherit;
    cursor: pointer;
    margin: calc(var(--size-2) * -1) calc(var(--size-1) * -1);
    padding: var(--size-3) 0;
    user-select: none;

    /*
    Custom arrow example
    */
    /*
    summary {
      align-items: center;
      display: flex;
      justify-content: space-between;
      list-style: none;

      &::marker,
      &::-webkit-details-marker {
        display: none;
      }
    }
    */
  }

  /* Custom arrow example, continued */
  /*
  &[open] > summary svg {
		rotate: 180deg;
  }
  */

  &[open] > summary {
    margin-bottom: var(--size-2);
  }

  /* Variants */
  &.elevated {
    --_bg-color: var(--surface-default);
    --_margin-inline: 0;

    box-shadow: var(--shadow-2);
    padding-inline: var(--size-3);
  }
  &.outlined {
    --_bg-color: var(--surface-default);
    --_margin-inline: 0;

    border: 1px solid var(--border-color);
    box-shadow: none;
    padding-inline: var(--size-3);
  }
  &.tonal {
    --_bg-color: var(--surface-tonal);
    --_margin-inline: 0;

    border: 0;
    box-shadow: none;
    padding-inline: var(--size-3);
  }
}

/* Accordion group */
:where(.card:has(details)) {
  --_gutter-color: var(--border-color);

  & > .content {
    margin-block: 0;
  }

  /* Variants */
  &.text {
    .content {
      padding-inline: 0;
    }
  }
  &.tonal {
    --_gutter-color: light-dark(
      color-mix(in oklch, var(--surface-tonal) 90%, black),
      color-mix(in oklch, var(--surface-tonal) 90%, white)
    );
  }

  details {
    border: 0;
    box-shadow: none;

    & + & {
      summary {
        border-radius: 0;
        border-block-start: 1px solid var(--_gutter-color);
      }
    }

    &:first-of-type {
      border-start-start-radius: var(--border-radius);
      border-start-end-radius: var(--border-radius);
      summary {
        border-start-start-radius: var(--border-radius);
        border-start-end-radius: var(--border-radius);
      }
    }

    &:last-of-type {
      border-end-start-radius: var(--border-radius);
      border-end-end-radius: var(--border-radius);
      summary {
        border-end-start-radius: var(--border-radius);
        border-end-end-radius: var(--border-radius);
      }
    }
  }
}
